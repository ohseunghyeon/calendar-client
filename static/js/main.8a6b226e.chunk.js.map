{"version":3,"sources":["util/transformEventForCalendar.ts","components/MonthView.styled.tsx","constants/index.ts","services/fetch.service.ts","components/MonthView.tsx","components/WeekView.styled.tsx","components/WeekView.tsx","hooks/useEventService.ts","components/Controller.styled.tsx","components/Controller.tsx","components/EventPopup.styled.tsx","components/EventPopup.tsx","util/Portal.tsx","components/Calendar.tsx","App.tsx","index.tsx"],"names":["transformEventForCalendar","events","eventsObj","sort","a","b","start","forEach","event","moment","end","month","date","eventWithMoreInfo","_objectSpread","push","startTimeString","format","endTimeString","top","hour","minute","height","add","Wrapper","styled","div","_templateObject","CalendarWrapper","_templateObject2","DaysRow","_templateObject3","Day","_templateObject4","DayText","span","_templateObject5","Weeks","_templateObject6","OneWeek","_templateObject7","DateTitleWrapper","_templateObject8","DateTitle","_templateObject9","DateTitleText","h2","_templateObject10","EventsWrapper","_templateObject11","EventsInnerWrapper","_templateObject12","EventWrapper","_templateObject13","OneEventWrapper","_templateObject14","OneEvent","_templateObject15","DAYS","TIMES","baseUrl","process","PRODUCTION_SERVER_URL","fetch_service","fetch","_fetch","_x","apply","this","arguments","toString","_ref","method","body","callback","qs","queries","concat","querystring","stringify","headers","Content-Type","JSON","then","response","json","error","alert","catch","message","MonthView","handleEventClick","openPopupForNewEvent","setReadyToFetch","_makeDatesForMonth","weeks","heights","firstDate","startOf","lastDate","endOf","week","isSameOrBefore","m","d","isThisMonth","oneDate","dateTitle","unixtime","unix","length","day","makeDatesForMonth","_useState","useState","_useState2","Object","slicedToArray","draggingEvent","setDraggingEvent","handleDateClick","e","currentTarget","target","handleDragEnter","preventDefault","classList","handleDragLeave","remove","react_default","createElement","map","key","weekIndex","index","data-testid","Date","getMonth","getDate","onDragOver","onDrop","droppedDateUnixtime","differenceStartEnd","setMonth","setDate","fetchService","id","title","getTime","handleDrop","onDragEnter","onDragLeave","onClick","mouseEvent","className","style","onDragStart","handleDragStart","draggable","FiberManualRecord","fontSize","color","timeout","Container","WeekView_styled_templateObject","UpperWrapper","WeekView_styled_templateObject2","LeftEmpty","WeekView_styled_templateObject3","LeftEmptyInner","WeekView_styled_templateObject4","DateAndNumberWrapper","WeekView_styled_templateObject5","DateAndNumberEmpty","WeekView_styled_templateObject6","DateAndNumberEmptyTwo","WeekView_styled_templateObject7","DateAndNumberEmptyShort","WeekView_styled_templateObject8","DateAndNumberEmptyLong","WeekView_styled_templateObject9","DateAndNumberEmptyLongContent","WeekView_styled_templateObject10","DateAndNumberRow","WeekView_styled_templateObject11","DateAndNumberRowPresentation","WeekView_styled_templateObject12","DateAndNumberRowPresentationEmpty","WeekView_styled_templateObject13","DateAndNumberRowPresentationColumn","WeekView_styled_templateObject14","DateAndNumberRowPresentationColumnEmpty","WeekView_styled_templateObject15","DateAndNumberRowPresentationColumnH2","_templateObject16","DateAndNumberRowPresentationColumnDay","_templateObject17","DateAndNumberRowPresentationColumnNumber","_templateObject18","DateAndNumberRowPresentationColumnEmptyEnd","_templateObject19","LowerWrapper","_templateObject20","LowerInnerWrppaer","_templateObject21","TimeWrapper","_templateObject22","TimeInnner","_templateObject23","TimeInnerEmpty","_templateObject24","Time","_templateObject25","TimeString","_templateObject26","_templateObject27","EventInner","_templateObject28","EventHorizontalLineWrapper","_templateObject29","EventHorizontalLine","_templateObject30","EventInnerEmptyLeft","_templateObject31","EventColumnWrapper","_templateObject32","EventColumnBox","_templateObject33","EventColumnPresentation","_templateObject34","EventButton","_templateObject35","EventButtonContent","_templateObject36","EventButtonContentTitle","_templateObject37","EventButtonContentTitleText","_templateObject38","EventButtonContentTime","_templateObject39","EventButtonContentEnd","_templateObject40","WeekView","i","makeDatesForWeek","isDragging","setIsDragging","_useState3","_useState4","_useState5","_useState6","draggingDayIndex","setDraggingDayIndex","_useState7","_useState8","draggingTop","setDraggingTop","Math","floor","nativeEvent","offsetY","handleDragOver","dayIndex","undefined","setTimeout","handleDragEnd","startDate","_","time","WeekView_styled_EventWrapper","eventIndex","onDragEnd","opacity","useEventService","dates","mode","setEvents","readyToFetch","useEffect","Controller_styled_templateObject","TitleWrapper","Controller_styled_templateObject2","Title","Controller_styled_templateObject3","ArrowWrapper","Controller_styled_templateObject4","MonthWeekButton","Link","Controller_styled_templateObject5","withRouter","_ref2","viewType","history","handleArrowClick","arrow","newDate","year","Controller_styled_Container","ArrowBackIos","cursor","ArrowForwardIos","startMonth","endMonth","makeTitle","to","EventPopupWrapper","EventPopup_styled_templateObject","Input","input","EventPopup_styled_templateObject2","DatePickerWrapper","EventPopup_styled_templateObject3","DatePickerStyled","DatePicker","EventPopup_styled_templateObject4","ButtonWrapper","EventPopup_styled_templateObject5","Button","button","EventPopup_styled_templateObject6","Dim","EventPopup_styled_templateObject7","EventPopup","initialStart","initialEnd","popupMode","selectedEvent","closePopup","selectedTime","handleDimClick","useCallback","setTitle","handleTitleChange","value","setHours","getHours","setStartDate","handleStartPickerChange","endDate","setEndDate","handleEndPickerChange","onChange","placeholder","selected","selectsStart","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","placeholderText","selectsEnd","ModalPortal","children","el","document","getElementById","ReactDOM","createPortal","Calendar_templateObject","Calendar","match","params","initialDate","_match$params","y","Number","M","_useEventService","isPopupOpen","setIsPopupOpen","setPopupMode","setSelectedTime","_useState9","_useState10","setSelectedEvent","Calendar_Container","components_Controller","components_MonthView","components_WeekView","Portal","components_EventPopup","App","react_router_dom","react_router","exact","path","component","from","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","render","MuiThemeProvider","src_App"],"mappings":"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","file":"static/js/main.8a6b226e.chunk.js","sourcesContent":["import moment from 'moment';\nimport { Event } from '../types/Event';\n\nconst PIXELS_OF_ONE_EVENT_IN_WEEK_VIEW = 48;\nconst PIXELS_BOTTOM_PADDING = 4;\n\n/**\n * Transform Events array to Events Object like\n * {\n *    month: {\n *        date: []\n *    }\n * }\n */\nconst transformEventForCalendar = (events: Event[]) => {\n  const eventsObj: any = {};\n  events\n    .sort((a, b) => a.start - b.start) // 시간 정렬\n    .forEach(event => {\n      const start = moment(event.start);\n      const end = moment(event.end);\n\n      const month = start.month();\n      const date = start.date();\n\n      const eventWithMoreInfo: any = { ...event };\n\n      if (!eventsObj[month]) {\n        eventsObj[month] = {};\n      }\n      if (!eventsObj[month][date]) {\n        eventsObj[month][date] = [];\n      }\n      eventsObj[month][date].push(eventWithMoreInfo);\n\n      eventWithMoreInfo.startTimeString = start.format('a hh시');\n      eventWithMoreInfo.endTimeString = end.format('a hh시');\n\n      // for week view\n      eventWithMoreInfo.top = (start.hour() + start.minute() / 60) * PIXELS_OF_ONE_EVENT_IN_WEEK_VIEW;\n      eventWithMoreInfo.height =\n        (end.hour() + end.minute() / 60 - (start.hour() + start.minute() / 60)) * PIXELS_OF_ONE_EVENT_IN_WEEK_VIEW - PIXELS_BOTTOM_PADDING;\n\n      start.add(1, 'day');\n    });\n\n  return eventsObj;\n};\n\nexport default transformEventForCalendar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  flex: 1 1 auto;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const CalendarWrapper = styled.div`\n  border-left: var(--border) 1px solid;\n  background-color: #fff;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n`;\n\nexport const DaysRow = styled.div`\n  margin: 0;\n  align-items: stretch;\n  display: flex;\n  flex: none;\n  height: 20px;\n`;\n\nexport const Day = styled.div`\n  border-right: var(--border) 1px solid;\n  flex: 1 1 0%;\n  text-align: center;\n  font-family: Roboto, Arial, sans-serif;\n  text-transform: uppercase;\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const DayText = styled.span`\n  color: #70757a;\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 20px;\n`;\n\nexport const Weeks = styled.div`\n  position: relative;\n  overflow: hidden;\n  border-bottom: var(--border) 1px solid;\n  display: flex;\n  flex: 1 1 0%;\n`;\n\nexport const OneWeek = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n`;\n\nexport const DateTitleWrapper = styled.div`\n  font-size: 14px;\n  line-height: 30px;\n  border-right: var(--border) 1px solid;\n  color: #70757a;\n  flex: 1 1 0%;\n  &:last-child {\n    border-right: none;\n  }\n  &.droppable {\n    background-color: rgba(66, 134, 244, 0.5);\n  }\n`;\n\nexport const DateTitle = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const DateTitleText = styled.h2`\n  margin-top: 8px;\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: 0.3px;\n  display: inline-block;\n  text-align: center;\n  white-space: nowrap;\n  width: max-content;\n  min-width: 24px;\n  line-height: 16px;\n  &.this-month {\n    color: var(--main-text);\n  }\n`;\n\nexport const EventsWrapper = styled.div`\n  margin-top: 30px;\n  flex: 1 1 0%;\n`;\n\nexport const EventsInnerWrapper = styled.div`\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  font-size: 24px;\n`;\n\nexport const EventWrapper = styled.div`\n  flex: 1 1 0%;\n  border-right: 1px solid transparent;\n`;\n\nexport const OneEventWrapper = styled.div`\n  position: absolute;\n  height: 24px;\n  width: 14.29%;\n  z-index: 2;\n`;\n\nexport const OneEvent = styled.div`\n  height: 22px;\n  padding: 0 8px;\n  line-height: 20px;\n  font-size: 12px;\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  transition: background-color 100ms linear;\n  &:hover {\n    background-color: var(--secondary-bg-hover);\n  }\n  cursor: pointer;\n`;\n","export const DAYS = ['일', '월', '화', '수', '목', '금', '토'];\n\nexport const TIMES = [\n  '',\n  '오전 1시',\n  '오전 2시',\n  '오전 3시',\n  '오전 4시',\n  '오전 5시',\n  '오전 6시',\n  '오전 7시',\n  '오전 8시',\n  '오전 9시',\n  '오전 10시',\n  '오전 11시',\n  '오후 12시',\n  '오후 1시',\n  '오후 2시',\n  '오후 3시',\n  '오후 4시',\n  '오후 5시',\n  '오후 6시',\n  '오후 7시',\n  '오후 8시',\n  '오후 9시',\n  '오후 10시',\n  '오후 11시',\n];\n\nexport const SECOND = 1000;\nexport const MINUTE = 60 * SECOND;\nexport const HOUR = 60 * MINUTE;\nexport const ONE_HOUR_HEIGHT_PIXELS = 48;\n","import querystring from 'querystring';\n\ninterface Props {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  body?: { id?: number; title?: string; start?: number; end?: number };\n  callback?: Function;\n  qs?: {\n    start: number;\n    end: number;\n  };\n}\n\nconst baseUrl = process.env.NODE_ENV === 'production'\n? process.env.PRODUCTION_SERVER_URL\n: process.env.REACT_APP_SERVER_URL;\n\nexport default {\n  fetch: ({ method, body, callback, qs }: Props) => {\n    const queries = qs ? `${querystring.stringify(qs)}` : '';\n    fetch(`${baseUrl}/events?${queries}`, {\n      method,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body),\n    })\n      .then(response => response.json())\n      .then(body => {\n        if (body.error) {\n          alert(body.error);\n        } else {\n          if (callback) callback(body);\n        }\n      })\n      .catch(error => alert(error.message));\n  },\n};\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { FiberManualRecord } from '@material-ui/icons';\nimport moment, { Moment } from 'moment';\nimport { Event } from '../types/Event';\nimport transformEventForCalendar from '../util/transformEventForCalendar';\nimport {\n  CalendarWrapper,\n  DayText,\n  Day,\n  DaysRow,\n  Wrapper,\n  Weeks,\n  OneWeek,\n  DateTitle,\n  DateTitleWrapper,\n  DateTitleText,\n  EventsWrapper,\n  EventsInnerWrapper,\n  EventWrapper,\n  OneEventWrapper,\n  OneEvent,\n} from './MonthView.styled';\nimport { DAYS } from '../constants';\nimport fetchService from '../services/fetch.service';\n\ninterface Props {\n  date: Moment;\n  events: Event[];\n  handleEventClick: (e: Event) => void;\n  openPopupForNewEvent: (unixtime: number) => void;\n  setReadyToFetch: Dispatch<SetStateAction<boolean>>;\n}\n\n/**\n * 캘린더에 쓸 Week [], dates [] 생성.\n * ex) 4주면 [['1', '2'...], [...], [..], [..]]\n */\nexport const makeDatesForMonth = (date: Moment, eventsObj: any) => {\n  const weeks: {\n    dateTitle: string; // 몇 월 몇 일인지\n    unixtime: number;\n    isThisMonth: boolean; // 이 날이 보고 있는 달인지 지난 달 말인지 다음 달 초인지\n    events: []; // 이 날의 이벤트들\n  }[][] = [];\n\n  const heights: number[] = [];\n\n  const firstDate = moment(date)\n    .startOf('month')\n    .startOf('week');\n  const lastDate = moment(date)\n    .endOf('month')\n    .endOf('week');\n\n  let week = 0;\n  while (firstDate.isSameOrBefore(lastDate)) {\n    const m = firstDate.month();\n    const d = firstDate.date();\n    let isThisMonth = false;\n\n    // 전 달 혹은 다음 달인 경우 week을 계산하지 않음\n    // 현재 8월인데 7월 마지막 주를 계산에 넣게 되면 0 번째 week이어야 하는데\n    // 5번째 week으로 계산함\n    if (m === date.month()) {\n      week =\n        firstDate.week() -\n        moment(firstDate)\n          .startOf('month')\n          .week();\n      isThisMonth = true;\n    }\n\n    // 주 생성\n    if (!weeks[week]) {\n      weeks[week] = [];\n      heights[week] = 0;\n    }\n\n    // 해당 날짜 이벤트 찾아오기\n    const events = (eventsObj[m] && eventsObj[m][d]) || [];\n\n    // 일 오브젝트 생성\n    const oneDate = {\n      dateTitle: firstDate.date() === 1 ? `${m + 1}월 ${firstDate.date()}일` : `${firstDate.date()}`,\n      isThisMonth,\n      events,\n      unixtime: firstDate.unix() * 1000,\n    };\n\n    // 수동으로 element에 height em을 주기 위함\n    if (events.length && heights[week] < events.length) {\n      heights[week] = events.length;\n    }\n\n    // 주에 일 추가\n    weeks[week][firstDate.day()] = oneDate;\n\n    firstDate.add(1, 'day');\n  }\n\n  return { weeks, heights };\n};\n\nconst MonthView: React.FC<Props> = ({ date, events, handleEventClick, openPopupForNewEvent, setReadyToFetch }) => {\n  const eventsObj = transformEventForCalendar(events);\n  const { weeks, heights } = makeDatesForMonth(date, eventsObj);\n  const [draggingEvent, setDraggingEvent] = useState<any>(); // event object\n\n  const handleDateClick = (e: React.SyntheticEvent, unixtime: number) => {\n    if (e.currentTarget === e.target) {\n      openPopupForNewEvent(unixtime);\n    }\n  };\n\n  const handleDragStart = (event: Event) => {\n    setDraggingEvent(event);\n  };\n\n  const handleDragEnter = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.currentTarget.classList.add('droppable');\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('droppable');\n  };\n\n  const handleDrop = (e: React.DragEvent, droppedDateUnixtime: number) => {\n    e.currentTarget.classList.remove('droppable');\n\n    const date = new Date(droppedDateUnixtime);\n    const event = draggingEvent;\n    const differenceStartEnd = event.end - event.start;\n\n    const start = new Date(event.start);\n    start.setMonth(date.getMonth());\n    start.setDate(date.getDate());\n\n    fetchService.fetch({\n      method: 'PUT',\n      body: {\n        id: event.id,\n        title: event.title,\n        start: start.getTime(),\n        end: start.getTime() + differenceStartEnd,\n      },\n      callback: () => setReadyToFetch(true),\n    });\n  };\n\n  return (\n    <Wrapper>\n      <CalendarWrapper>\n        <DaysRow>\n          {DAYS.map(day => (\n            <Day key={day}>\n              <DayText>{day}</DayText>\n            </Day>\n          ))}\n        </DaysRow>\n        {weeks.map((week, weekIndex) => (\n          <Weeks key={weekIndex}>\n            <OneWeek>\n              {week.map((date, index) => (\n                <DateTitleWrapper\n                  data-testid={`TW-${new Date(date.unixtime).getMonth()}-${new Date(date.unixtime).getDate()}`}\n                  onDragOver={e => e.preventDefault()}\n                  onDrop={e => handleDrop(e, date.unixtime)}\n                  onDragEnter={handleDragEnter}\n                  onDragLeave={handleDragLeave}\n                  onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)}\n                  key={index}>\n                  <DateTitle>\n                    <DateTitleText className={date.isThisMonth ? 'this-month' : ''}>{date.dateTitle}</DateTitleText>\n                  </DateTitle>\n                </DateTitleWrapper>\n              ))}\n            </OneWeek>\n\n            <EventsWrapper>\n              <EventsInnerWrapper style={{ height: `${heights[weekIndex]}em` }}>\n                {week.map((date, index) => (\n                  <EventWrapper onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)} key={index}>\n                    {date.events.map((event: any, index) => (\n                      <OneEventWrapper\n                        data-testid={`${new Date(date.unixtime).getMonth()}-${new Date(date.unixtime).getDate()}-${index}`}\n                        onDragStart={() => handleDragStart(event)}\n                        draggable\n                        key={event.id}\n                        onClick={() => handleEventClick(event)}\n                        style={{ top: `${index}em` }}>\n                        <OneEvent data-testid=\"title\">\n                          <FiberManualRecord fontSize=\"small\" color=\"secondary\" />\n                          {event.startTimeString} {event.title}\n                        </OneEvent>\n                      </OneEventWrapper>\n                    ))}\n                  </EventWrapper>\n                ))}\n              </EventsInnerWrapper>\n            </EventsWrapper>\n          </Weeks>\n        ))}\n      </CalendarWrapper>\n    </Wrapper>\n  );\n};\n\nexport default MonthView;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n  flex: none;\n`;\n\nexport const LeftEmpty = styled.div`\n  white-space: nowrap;\n  display: flex;\n  flex: none;\n  flex-direction: column;\n`;\n\nexport const LeftEmptyInner = styled.div`\n  flex: 1;\n  margin-left: 1px;\n  min-width: 52px;\n`;\n\nexport const DateAndNumberWrapper = styled.div`\n  margin-left: -1px;\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  // overflow: hidden;\n  position: relative;\n`;\n\nexport const DateAndNumberEmpty = styled.div`\n  position: absolute;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  flex: none;\n  pointer-events: none;\n`;\n\nexport const DateAndNumberEmptyTwo = styled.div`\n  display: flex;\n  padding-right: 8px;\n  height: 100%;\n  overflow: hidden;\n  overflow-x: scroll;\n`;\n\nexport const DateAndNumberEmptyShort = styled.div`\n  width: 9px;\n  min-width: 9px;\n`;\n\nexport const DateAndNumberEmptyLong = styled.div`\n  min-width: calc(100% - 18px);\n  flex: none;\n  display: inline-flex;\n  vertical-align: top;\n  padding-right: 8px;\n`;\n\nexport const DateAndNumberEmptyLongContent = styled.div`\n  flex: 1 0 68px;\n  min-width: 68px;\n  padding-right: 13px;\n  position: relative;\n  overflow: visible;\n  display: flex;\n  z-index: 1;\n`;\n\nexport const DateAndNumberRow = styled.div`\n  height: 84px;\n  display: flex;\n  flex: none;\n  overflow: hidden;\n`;\n\nexport const DateAndNumberRowPresentation = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  overflow: hidden;\n  // overflow-x: scroll;\n`;\n\nexport const DateAndNumberRowPresentationEmpty = styled.div`\n  width: 9px;\n  min-width: 9px;\n`;\n\nexport const DateAndNumberRowPresentationColumn = styled.div`\n  width: 81px;\n  min-width: 81px;\n  flex: 1 0 auto;\n  overflow: hidden;\n  box-sizing: border-box;\n  display: flex;\n`;\n\nexport const DateAndNumberRowPresentationColumnEmpty = styled.div`\n  // border-left: #dadce0 1px solid;\n  bottom: 0;\n  height: 20px;\n  margin-left: -1px;\n  position: absolute;\n`;\n\nexport const DateAndNumberRowPresentationColumnH2 = styled.h2`\n  font-weight: 400;\n  margin: 0;\n  text-align: center;\n  width: 100%;\n  font-size: 1.5em;\n`;\n\nexport const DateAndNumberRowPresentationColumnDay = styled.div`\n  line-height: 32px;\n  position: relative;\n  z-index: 2;\n  color: #70757a;\n  font-size: 11px;\n  font-weight: 500;\n  letter-spacing: 0.8px;\n  margin-left: 0;\n  margin-top: 8px;\n  text-indent: 0.8px;\n  text-transform: uppercase;\n`;\n\nexport const DateAndNumberRowPresentationColumnNumber = styled.div`\n  position: relative;\n  outline: none;\n  color: #3c4043;\n  z-index: 2;\n  font-size: 26px;\n  letter-spacing: -2.6px;\n  text-indent: -2.6px;\n  font-variant: tabular-nums;\n  font-feature-settings: 'tnum' 1;\n  border-radius: 100%;\n  line-height: 46px;\n  height: 46px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -8px;\n  width: 46px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const DateAndNumberRowPresentationColumnEmptyEnd = styled.div`\noverflow: scroll\nvisibility: hidden;\nflex: none;\n`;\n\nexport const LowerWrapper = styled.div`\n  flex: 1 1 60%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  // overflow: hidden;\n`;\n\nexport const LowerInnerWrppaer = styled.div`\n  // overflow: hidden;\n  align-items: stretch;\n  display: flex;\n  flex: 1 1 auto;\n`;\n\nexport const TimeWrapper = styled.div`\n  height: auto;\n  // overflow-y: hidden;\n  flex: none;\n  display: flex;\n  align-items: flex-start;\n  min-width: 40px;\n`;\n\nexport const TimeInnner = styled.div`\n  position: relative;\n  background-color: #fff;\n  box-sizing: border-box;\n  margin-left: auto;\n`;\n\nexport const TimeInnerEmpty = styled.div`\n  height: 20px;\n  display: block;\n  visibility: hidden;\n  overflow-y: hidden;\n  max-width: 80px;\n`;\n\nexport const Time = styled.div`\n  position: relative;\n  height: 48px;\n  padding-right: 8px;\n  text-align: right;\n`;\n\nexport const TimeString = styled.span`\n  display: block;\n  position: relative;\n  top: -6px;\n  color: #70757a;\n  font-size: 10px;\n  text-align: right;\n`;\n\nexport const EventWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex: 1 1 auto;\n`;\n\nexport const EventInner = styled.div`\n  min-width: 100%;\n  flex: none;\n  display: inline-flex;\n  vertical-align: top;\n  // overflow: hidden;\n  position: relative;\n`;\n\nexport const EventHorizontalLineWrapper = styled.div`\n  border-top: #dadce0 apx solid;\n`;\n\nexport const EventHorizontalLine = styled.div`\n  height: 48px;\n\n  &::after {\n    content: '';\n    border-bottom: #dadce0 1px solid;\n    position: absolute;\n    width: 100%;\n    margin-top: -1px;\n    z-index: 3;\n    pointer-events: none;\n  }\n`;\n\nexport const EventInnerEmptyLeft = styled.div`\n  width: 8px;\n  border-right: #dadce0 1px solid;\n`;\n\nexport const EventColumnWrapper = styled.div`\n  width: 81px;\n  min-width: 81px;\n  flex: 1 0 auto;\n  border-right: #dadce0 1px solid;\n  position: relative;\n  padding-right: 12px;\n  box-sizing: border-box;\n  outline: none;\n  &:last-child {\n    border-right: white 1px solid;\n    overflow: visible;\n  }\n`;\n\nexport const EventColumnBox = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n`;\n\nexport const EventColumnPresentation = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const EventButton = styled.div`\n  position: absolute;\n  border-radius: 4px;\n  margin-left: -1px;\n  margin-top: 1px;\n  outline: none;\n  cursor: pointer;\n  left: 0%;\n  width: 100%;\n  z-index: 4;\n  background-color: rgb(66, 133, 244);\n  border-color: rgb(66, 133, 244);\n\n  &::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    content: '';\n    box-sizing: border-box;\n    border-radius: 4px;\n    pointer-events: none;\n    opacity: 0;\n    transition: opacity 100ms linear;\n    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  }\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100 %;\n    height: 100%;\n    content: '';\n    box-sizing: border-box;\n    border-radius: 4px;\n    pointer-events: none;\n  }\n`;\n\nexport const EventButtonContent = styled.div`\n  max-height: 100%;\n  overflow: hidden;\n  padding-left: 8px;\n  text-align: left;\n  user-select: none;\n`;\n\nexport const EventButtonContentTitle = styled.div`\n  font-weight: 400;\n  letter-spacing: 0.4px;\n  padding-top: 4px;\n  white-space: normal;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  color: #fff;\n  font-size: 12px;\n  line-height: 15px;\n  overflow: hidden;\n  text-align: left;\n`;\n\nexport const EventButtonContentTitleText = styled.span`\n  font-weight: 400;\n  letter-spacing: 0.4px;\n  white-space: normal;\n  overflow-wrap: break-word;\n`;\n\nexport const EventButtonContentTime = styled.div`\n  max-width: 100%;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  letter-spacing: 0.1px;\n  line-height: 15px;\n  overflow: hidden;\n`;\n\nexport const EventButtonContentEnd = styled.div`\n  bottom: 0;\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 50%;\n  max-height: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 5004;\n  user-select: none;\n`;\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport moment, { Moment } from 'moment';\nimport { Event } from '../types/Event';\nimport {\n  Container,\n  UpperWrapper,\n  LeftEmpty,\n  LeftEmptyInner,\n  DateAndNumberWrapper,\n  DateAndNumberEmpty,\n  DateAndNumberEmptyTwo,\n  DateAndNumberEmptyShort,\n  DateAndNumberEmptyLong,\n  DateAndNumberRow,\n  DateAndNumberEmptyLongContent,\n  DateAndNumberRowPresentationEmpty,\n  DateAndNumberRowPresentation,\n  DateAndNumberRowPresentationColumn,\n  DateAndNumberRowPresentationColumnEmpty,\n  DateAndNumberRowPresentationColumnH2,\n  DateAndNumberRowPresentationColumnNumber,\n  DateAndNumberRowPresentationColumnEmptyEnd,\n  DateAndNumberRowPresentationColumnDay,\n  LowerWrapper,\n  LowerInnerWrppaer,\n  TimeWrapper,\n  TimeInnner,\n  Time,\n  TimeString,\n  TimeInnerEmpty,\n  EventWrapper,\n  EventInner,\n  EventHorizontalLineWrapper,\n  EventHorizontalLine,\n  EventInnerEmptyLeft,\n  EventColumnWrapper,\n  EventColumnBox,\n  EventColumnPresentation,\n  EventButton,\n  EventButtonContent,\n  EventButtonContentTitle,\n  EventButtonContentTitleText,\n  EventButtonContentTime,\n  EventButtonContentEnd,\n} from './WeekView.styled';\nimport transformEventForCalendar from '../util/transformEventForCalendar';\nimport { HOUR, DAYS, TIMES, ONE_HOUR_HEIGHT_PIXELS } from '../constants';\nimport fetchService from '../services/fetch.service';\n\ninterface Props {\n  date: Moment;\n  events: Event[];\n  handleEventClick: (e: Event) => void;\n  openPopupForNewEvent: (unixtime: number) => void;\n  setReadyToFetch: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const makeDatesForWeek = (date: Moment, eventsObj: any) => {\n  // 일자 구하기\n  const week: {\n    date: string;\n    events: any[];\n    unixtime: number;\n  }[] = [];\n\n  // 주 시작 날짜\n  const firstDate = moment(date).startOf('week');\n\n  // 각 요일에 날짜, 이벤트 담기\n  for (let i = 0; i < 7; i++) {\n    const m = firstDate.month();\n    const d = firstDate.date();\n\n    // 해당 날짜 이벤트 찾아오기\n    const events = (eventsObj[m] && eventsObj[m][d]) || [];\n\n    week.push({\n      date: `${firstDate.date()}`,\n      events,\n      unixtime: firstDate.unix() * 1000,\n    });\n\n    firstDate.add(1, 'day');\n  }\n\n  return week;\n};\n\nlet timeout: number | undefined;\n\nconst WeekView: React.FC<Props> = ({ date, events, handleEventClick, openPopupForNewEvent, setReadyToFetch }) => {\n  const eventsObj = transformEventForCalendar(events);\n  const week = makeDatesForWeek(date, eventsObj);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggingEvent, setDraggingEvent] = useState<any>(); // event object\n  const [draggingDayIndex, setDraggingDayIndex] = useState(-1);\n  const [draggingTop, setDraggingTop] = useState(0);\n\n  const handleDateClick = (e: React.MouseEvent, unixtime: number) => {\n    if (e.currentTarget === e.target) {\n      openPopupForNewEvent(unixtime + HOUR * Math.floor(e.nativeEvent.offsetY / ONE_HOUR_HEIGHT_PIXELS));\n    }\n  };\n\n  const handleDragStart = (event: Event) => {\n    setDraggingEvent(event);\n    setIsDragging(true);\n  };\n\n  const handleDragOver = (e: React.DragEvent, dayIndex: number) => {\n    e.preventDefault();\n    if (timeout === undefined && e.target === e.currentTarget) {\n      setDraggingDayIndex(dayIndex);\n      setDraggingTop(Math.floor(e.nativeEvent.offsetY / ONE_HOUR_HEIGHT_PIXELS) * ONE_HOUR_HEIGHT_PIXELS);\n\n      timeout = setTimeout(() => (timeout = undefined), 100);\n    }\n  };\n\n  const handleDragEnd = () => {\n    setIsDragging(false);\n\n    if (draggingDayIndex === -1) {\n      return;\n    }\n\n    const event = draggingEvent;\n    const differenceStartEnd = event.end - event.start;\n\n    const startDate = moment(event.start);\n    startDate.day(draggingDayIndex);\n    startDate.hour(draggingTop / ONE_HOUR_HEIGHT_PIXELS);\n\n    setDraggingDayIndex(-1);\n    setDraggingEvent(undefined);\n    setDraggingTop(0);\n\n    fetchService.fetch({\n      method: 'PUT',\n      body: {\n        id: event.id,\n        title: event.title,\n        start: startDate.unix() * 1000,\n        end: startDate.unix() * 1000 + differenceStartEnd,\n      },\n      callback: () => setReadyToFetch(true),\n    });\n  };\n\n  return (\n    <Container>\n      <UpperWrapper>\n        <LeftEmpty>\n          <LeftEmptyInner></LeftEmptyInner>\n        </LeftEmpty>\n        <DateAndNumberWrapper>\n          <DateAndNumberEmpty>\n            <DateAndNumberEmptyTwo>\n              <DateAndNumberEmptyShort />\n              <DateAndNumberEmptyLong>\n                {DAYS.map((_, index) => (\n                  <DateAndNumberEmptyLongContent key={index} />\n                ))}\n              </DateAndNumberEmptyLong>\n            </DateAndNumberEmptyTwo>\n          </DateAndNumberEmpty>\n          <DateAndNumberRow>\n            <DateAndNumberRowPresentation>\n              <DateAndNumberRowPresentationEmpty />\n              {DAYS.map((day, index) => (\n                <DateAndNumberRowPresentationColumn key={index}>\n                  <DateAndNumberRowPresentationColumnEmpty />\n                  <DateAndNumberRowPresentationColumnH2>\n                    <DateAndNumberRowPresentationColumnDay>{day}</DateAndNumberRowPresentationColumnDay>\n                    <DateAndNumberRowPresentationColumnNumber>{week[index].date}</DateAndNumberRowPresentationColumnNumber>\n                  </DateAndNumberRowPresentationColumnH2>\n                </DateAndNumberRowPresentationColumn>\n              ))}\n              <DateAndNumberRowPresentationColumnEmptyEnd />\n            </DateAndNumberRowPresentation>\n          </DateAndNumberRow>\n        </DateAndNumberWrapper>\n      </UpperWrapper>\n\n      <LowerWrapper>\n        <LowerInnerWrppaer>\n          <TimeWrapper>\n            <TimeInnner>\n              {TIMES.map(time => (\n                <Time key={time}>\n                  <TimeString>{time}</TimeString>\n                </Time>\n              ))}\n              <TimeInnerEmpty />\n            </TimeInnner>\n          </TimeWrapper>\n\n          <EventWrapper>\n            <EventInner>\n              <EventHorizontalLineWrapper>\n                {TIMES.map((time, index) => (\n                  <EventHorizontalLine key={index} />\n                ))}\n              </EventHorizontalLineWrapper>\n              <EventInnerEmptyLeft />\n\n              {week.map((date, dayIndex) => (\n                <EventColumnWrapper key={dayIndex}>\n                  <EventColumnBox\n                    data-testid={`Date-${date.date}`}\n                    onDragOver={e => handleDragOver(e, dayIndex)}\n                    onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)}\n                  />\n                  <EventColumnPresentation\n                    onDragOver={e => handleDragOver(e, dayIndex)}\n                    onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)}>\n                    {date.events.map((event, eventIndex) => (\n                      <EventButton\n                        data-testid={`${date.date}-${eventIndex}`}\n                        onDragStart={() => handleDragStart(event)}\n                        onDragEnd={handleDragEnd}\n                        draggable\n                        key={event.id}\n                        style={{\n                          top: `${event.top}px`,\n                          height: `${event.height}px`,\n                        }}\n                        onClick={() => handleEventClick(event)}>\n                        <EventButtonContent>\n                          <EventButtonContentTitle>\n                            <EventButtonContentTitleText data-testid=\"title\">{event.title}</EventButtonContentTitleText>\n                            <EventButtonContentTime data-testid=\"time\">\n                              {`${event.startTimeString}~${event.endTimeString}`}\n                            </EventButtonContentTime>\n                            <EventButtonContentEnd />\n                          </EventButtonContentTitle>\n                        </EventButtonContent>\n                      </EventButton>\n                    ))}\n\n                    {isDragging && dayIndex === draggingDayIndex && (\n                      <EventButton\n                        style={{\n                          top: `${draggingTop}px`,\n                          height: `${draggingEvent.height}px`,\n                          opacity: 0.7,\n                        }}>\n                        <EventButtonContent>\n                          <EventButtonContentTitle>\n                            <EventButtonContentTitleText>{draggingEvent.title}</EventButtonContentTitleText>\n                            <EventButtonContentTime>{`${draggingEvent.startTimeString}~${draggingEvent.endTimeString}`}</EventButtonContentTime>\n                            <EventButtonContentEnd />\n                          </EventButtonContentTitle>\n                        </EventButtonContent>\n                      </EventButton>\n                    )}\n                  </EventColumnPresentation>\n                </EventColumnWrapper>\n              ))}\n            </EventInner>\n          </EventWrapper>\n        </LowerInnerWrppaer>\n      </LowerWrapper>\n    </Container>\n  );\n};\n\nexport default WeekView;\n","import { useEffect, useState } from 'react';\nimport fetchService from '../services/fetch.service';\nimport { Event } from '../types/Event';\nimport moment, { Moment } from 'moment';\n\nconst useEventService = (dates: Moment, mode: 'month' | 'week') => {\n  const [events, setEvents] = useState<Event[]>([]);\n  const [readyToFetch, setReadyToFetch] = useState(true);\n\n  const firstDate = moment(dates).startOf(mode);\n  const lastDate = moment(dates).endOf(mode);\n  if (mode === 'month') {\n    // ex) when we fetch August, fetch July's late days and September's early days\n    firstDate.startOf('week');\n    lastDate.endOf('week');\n  }\n\n  const start = firstDate.unix() * 1000;\n  const end = lastDate.unix() * 1000;\n\n  useEffect(() => setReadyToFetch(true), [start, end]);\n\n  useEffect(() => {\n    if (readyToFetch) {\n      fetchService.fetch({\n        method: 'GET',\n        callback: setEvents,\n        qs: {\n          start,\n          end,\n        },\n      });\n      setReadyToFetch(false);\n    }\n  }, [readyToFetch, start, end]);\n\n  return {\n    events,\n    setReadyToFetch,\n  };\n};\n\nexport default useEventService;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 50px;\n  justify-content: space-around;\n  align-items: center;\n  border-bottom: var(--border) 1px solid;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  min-width: 200px;\n`;\n\nexport const Title = styled.div`\n  font-size: 1.5em;\n  color: var(--main-text);\n`;\n\nexport const ArrowWrapper = styled.div`\n  margin-right: 20px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const MonthWeekButton = styled(Link)`\n  color: var(--main-text);\n  border: #000 1px solid;\n  text-decoration: none;\n  padding: 5px;\n  &:first-child {\n    border-right: none;\n  }\n  &.selected {\n    background-color: var(--primary-bg);\n    color: var(--primary-text);\n  }\n`;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nimport { Moment } from 'moment';\nimport { History } from 'history';\nimport moment from 'moment';\nimport { Container, TitleWrapper, ArrowWrapper, Title, MonthWeekButton } from './Controller.styled';\n\ninterface ControllerProps {\n  viewType: 'month' | 'week';\n  date: Moment;\n  setDate: Dispatch<SetStateAction<Moment>>;\n  history: History;\n}\n\nexport const makeTitle = ({ viewType, date }: { viewType: 'month' | 'week'; date: Moment }) => {\n  let title = `${date.year()}년 ${date.month() + 1}월`;\n  if (viewType === 'week') {\n    const startMonth = moment(date)\n      .startOf('week')\n      .month();\n    const endMonth = moment(date)\n      .endOf('week')\n      .month();\n    if (startMonth !== endMonth) {\n      title = `${date.year()}년 ${startMonth + 1}월 - ${endMonth + 1}월`;\n    }\n  }\n  return title;\n};\n\nconst Controller: React.FC<RouteComponentProps & ControllerProps> = ({ viewType, date, setDate, history }) => {\n  const handleArrowClick = (arrow: 'add' | 'subtract') => () => {\n    const newDate = moment(date);\n    // add or subtract 1 month, week\n    newDate[arrow](1, viewType === 'month' ? 'M' : 'w');\n\n    // month 이동 후 그 달의 첫 날로\n    if (viewType === 'month') {\n      newDate.startOf('month');\n    }\n    setDate(newDate);\n    history.push(`/${viewType}/${newDate.year()}/${newDate.month() + 1}/${newDate.date()}`);\n  };\n\n  return (\n    <Container>\n      <TitleWrapper>\n        <ArrowWrapper>\n          <ArrowBackIos data-testid=\"left-arrow\" style={{ cursor: 'pointer' }} onClick={handleArrowClick('subtract')} />\n          <ArrowForwardIos data-testid=\"right-arrow\" style={{ cursor: 'pointer' }} onClick={handleArrowClick('add')} />\n        </ArrowWrapper>\n        <Title>{makeTitle({ viewType, date })}</Title>\n      </TitleWrapper>\n\n      <div>\n        <MonthWeekButton\n          className={viewType === 'month' ? 'selected' : ''}\n          data-testid=\"month-view\"\n          to={`/month/${date.year()}/${date.month() + 1}/${date.date()}`}>\n          Month\n        </MonthWeekButton>\n        <MonthWeekButton\n          className={viewType === 'week' ? 'selected' : ''}\n          data-testid=\"week-view\"\n          to={`/week/${date.year()}/${date.month() + 1}/${date.date()}`}>\n          Week\n        </MonthWeekButton>\n      </div>\n    </Container>\n  );\n};\n\nexport default withRouter(Controller);\n","import styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const EventPopupWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  padding: 2rem 1rem;\n  // width: 70%;\n  align-items: center;\n  border-radius: 10px;\n  animation: showup 0.5s;\n  border: #000 1px solid;\n\n  @keyframes showup {\n    from {\n      opacity: 0;\n      visibility: hidden;\n    }\n    to {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 5px;\n`;\n\nexport const DatePickerWrapper = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const DatePickerStyled = styled(DatePicker)`\n  border: none;\n  border-bottom: #000 1px solid;\n  padding: 5px;\n  margin: 0 5px;\n  text-align: center;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  color: var(--main-text);\n  background-color: #fff;\n  border: #000 1px solid;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nexport const Dim = styled.div`\n  background: rgba(0, 0, 0, 0.3);\n  position: fixed;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n","import React, { useState, Dispatch, SetStateAction, useCallback } from 'react';\nimport { Event } from '../types/Event';\nimport fetchService from '../services/fetch.service';\nimport { Dim, EventPopupWrapper, Input, DatePickerWrapper, DatePickerStyled, ButtonWrapper, Button } from './EventPopup.styled';\n\ninterface EventPopupProps {\n  viewType: string;\n  popupMode: string;\n  selectedEvent?: Event;\n  closePopup: () => void;\n  setReadyToFetch: Dispatch<SetStateAction<boolean>>;\n  selectedTime: Date;\n}\n\nconst EventPopup: React.FC<EventPopupProps> = ({ viewType, popupMode, selectedEvent, closePopup, setReadyToFetch, selectedTime }) => {\n  const handleDimClick = useCallback((e: React.SyntheticEvent) => e.currentTarget === e.target && closePopup(), [closePopup]);\n\n  const [title, setTitle] = useState(selectedEvent ? selectedEvent.title : '');\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value), [setTitle]);\n\n  let initialStart, initialEnd;\n  if (popupMode === 'update' && selectedEvent) {\n    initialStart = new Date(selectedEvent.start);\n    initialEnd = new Date(selectedEvent.end);\n  } else {\n    // 월/주 보기에서, 월은 현재 시간, 주는 선택한 시간으로 팝업 시간 설정\n    initialStart = selectedTime;\n    if (viewType === 'month') initialStart.setHours(new Date().getHours() + 1);\n    initialEnd = new Date(initialStart);\n    initialEnd.setHours(initialStart.getHours() + 1);\n  }\n\n  const [startDate, setStartDate] = useState(initialStart);\n  const handleStartPickerChange = useCallback((date: Date) => setStartDate(date), [setStartDate]);\n\n  const [endDate, setEndDate] = useState(initialEnd);\n  const handleEndPickerChange = useCallback((date: Date) => setEndDate(date), [setEndDate]);\n\n  // 삭제, 저장 핸들러\n  const callback = useCallback(() => {\n    setReadyToFetch(true);\n    closePopup();\n  }, [closePopup, setReadyToFetch]);\n\n  const handleRemove = () => {\n    if (selectedEvent) {\n      fetchService.fetch({\n        method: 'DELETE',\n        body: { id: selectedEvent.id },\n        callback,\n      });\n    }\n  };\n\n  const handleSave = () => {\n    fetchService.fetch({\n      method: popupMode === 'update' ? 'PUT' : 'POST',\n      body: {\n        id: selectedEvent && selectedEvent.id,\n        title: title || '(제목 없음)',\n        start: startDate.getTime(),\n        end: endDate.getTime(),\n      },\n      callback,\n    });\n  };\n\n  return (\n    <Dim data-testid=\"dim\" onClick={handleDimClick}>\n      <EventPopupWrapper>\n        <Input data-testid=\"title\" value={title} onChange={handleTitleChange} placeholder=\"일정의 제목을 입력해주세요\" />\n        <DatePickerWrapper data-testid=\"pickers\">\n          <DatePickerStyled\n            selected={startDate}\n            onChange={handleStartPickerChange}\n            selectsStart\n            startDate={startDate}\n            endDate={endDate}\n            showTimeSelect\n            timeFormat=\"h:mm aa\"\n            timeIntervals={60}\n            dateFormat=\"yyyy-MM-dd h:mm aa\"\n            timeCaption=\"시간\"\n            placeholderText=\"시작 날짜와 시간을 선택하세요\"\n          />{' '}\n          ~{' '}\n          <DatePickerStyled\n            selected={endDate}\n            onChange={handleEndPickerChange}\n            selectsEnd\n            startDate={startDate}\n            endDate={endDate}\n            showTimeSelect\n            timeFormat=\"h:mm aa\"\n            timeIntervals={60}\n            dateFormat=\"yyyy-MM-dd h:mm aa\"\n            timeCaption=\"시간\"\n            placeholderText=\"끝나는 날짜와 시간을 선택하세요\"\n          />\n        </DatePickerWrapper>\n\n        <ButtonWrapper>\n          <Button data-testid=\"cancel\" onClick={closePopup}>\n            취소\n          </Button>\n          {popupMode === 'update' && (\n            <Button data-testid=\"remove\" onClick={handleRemove}>\n              삭제\n            </Button>\n          )}\n          <Button data-testid=\"save\" onClick={handleSave}>\n            저장\n          </Button>\n        </ButtonWrapper>\n      </EventPopupWrapper>\n    </Dim>\n  );\n};\n\nexport default EventPopup;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst ModalPortal: React.FC = ({ children }) => {\n  const el = document.getElementById('modal');\n  return el ? ReactDOM.createPortal(children, el) : null;\n};\n\nexport default ModalPortal;\n","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { RouteComponentProps } from 'react-router-dom';\nimport moment, { Moment } from 'moment';\nimport { Event } from '../types/Event';\nimport MonthView from './MonthView';\nimport WeekView from './WeekView';\nimport useEventService from '../hooks/useEventService';\nimport Controller from './Controller';\nimport EventPopup from './EventPopup';\nimport Portal from '../util/Portal';\n\ninterface CalendarProps {\n  viewType: 'month' | 'week';\n  year?: string;\n  month?: string;\n  date?: string;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  user-select: none;\n`;\n\nconst Calendar: React.FC<RouteComponentProps<CalendarProps>> = ({ match }) => {\n  const viewType = match.params.viewType || 'month';\n\n  // a date which user is looking\n  const initialDate: any = {};\n  if (match.params.date) {\n    // only for initilization of dates when it's the first open of this app\n    const { year, month, date } = match.params;\n    initialDate.y = Number(year);\n    initialDate.M = Number(month) - 1;\n    initialDate.d = Number(date);\n  }\n  const [date, setDate] = useState<Moment>(moment(initialDate));\n\n  // events\n  const { events, setReadyToFetch } = useEventService(date, viewType);\n\n  // popups\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupMode, setPopupMode] = useState<'new' | 'update'>('new');\n  const [selectedTime, setSelectedTime] = useState<Date>(new Date());\n  const [selectedEvent, setSelectedEvent] = useState<Event>();\n  const closePopup = useCallback(() => {\n    setSelectedEvent(undefined);\n    setIsPopupOpen(false);\n  }, []);\n\n  const handleEventClick = (event: Event) => {\n    setSelectedEvent(event);\n    setPopupMode('update');\n    setIsPopupOpen(true);\n  };\n\n  const openPopupForNewEvent = (unixtime: number) => {\n    setSelectedTime(new Date(unixtime));\n    setPopupMode('new');\n    setIsPopupOpen(true);\n  };\n\n  return (\n    <Container>\n      <Controller viewType={viewType} setDate={setDate} date={date} />\n\n      {viewType === 'month' ? (\n        <MonthView\n          date={date}\n          events={events}\n          handleEventClick={handleEventClick}\n          openPopupForNewEvent={openPopupForNewEvent}\n          setReadyToFetch={setReadyToFetch}\n        />\n      ) : (\n        <WeekView\n          date={date}\n          events={events}\n          handleEventClick={handleEventClick}\n          openPopupForNewEvent={openPopupForNewEvent}\n          setReadyToFetch={setReadyToFetch}\n        />\n      )}\n\n      {isPopupOpen && (\n        <Portal>\n          <EventPopup\n            viewType={viewType}\n            selectedEvent={selectedEvent}\n            popupMode={popupMode}\n            closePopup={closePopup}\n            setReadyToFetch={setReadyToFetch}\n            selectedTime={selectedTime}\n          />\n        </Portal>\n      )}\n    </Container>\n  );\n};\n\nexport default Calendar;\n","import React from 'react';\nimport { BrowserRouter, HashRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport 'moment/locale/ko';\nimport Calendar from './components/Calendar';\n\nconst App: React.FC = () => (\n  // <BrowserRouter basename=\"/calendar-client\">\n    <HashRouter>\n      <Switch>\n        <Route\n          exact\n          path={['/', '/:viewType(month|week)', '/:viewType(month|week)/:year/:month/:date']}\n          component={Calendar}\n        />\n        <Redirect from=\"*\" to=\"/\" />;\n    </Switch>\n    </HashRouter>\n  // </BrowserRouter>\n);\n\nexport default App;\n","import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#4285f4',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}