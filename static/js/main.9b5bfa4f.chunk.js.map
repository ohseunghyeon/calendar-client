{"version":3,"sources":["util/transformEventForCalendar.ts","components/MonthView.styled.tsx","constants/index.ts","services/fetch.service.ts","components/MonthView.tsx","components/WeekView.styled.tsx","components/WeekView.tsx","hooks/useEventService.ts","components/Controller.styled.tsx","components/Controller.tsx","components/EventPopup.styled.tsx","components/EventPopup.tsx","util/Portal.tsx","util/Loading.tsx","components/Calendar.tsx","App.tsx","index.tsx"],"names":["transformEventForCalendar","events","eventsObj","sort","a","b","start","forEach","event","moment","end","month","date","eventWithMoreInfo","_objectSpread","push","startTimeString","format","endTimeString","top","hour","minute","height","add","Wrapper","styled","div","_templateObject","CalendarWrapper","_templateObject2","DaysRow","_templateObject3","Day","_templateObject4","DayText","span","_templateObject5","Weeks","_templateObject6","OneWeek","_templateObject7","DateTitleWrapper","_templateObject8","DateTitle","_templateObject9","DateTitleText","h2","_templateObject10","EventsWrapper","_templateObject11","EventsInnerWrapper","_templateObject12","EventWrapper","_templateObject13","OneEventWrapper","_templateObject14","OneEvent","_templateObject15","DAYS","TIMES","fetch_service","fetch","_fetch","_x","apply","this","arguments","toString","_ref","method","body","callback","finalCb","qs","queries","concat","querystring","stringify","process","headers","Content-Type","JSON","then","response","json","error","alert","catch","message","MonthView","handleEventClick","openPopupForNewEvent","setReadyToFetch","_makeDatesForMonth","weeks","heights","firstDate","startOf","lastDate","endOf","week","isSameOrBefore","m","d","isThisMonth","oneDate","dateTitle","unixtime","unix","length","day","makeDatesForMonth","_useState","useState","_useState2","Object","slicedToArray","draggingEvent","setDraggingEvent","handleDateClick","e","currentTarget","target","handleDragEnter","preventDefault","classList","handleDragLeave","remove","react_default","createElement","map","key","weekIndex","index","data-testid","Date","getMonth","getDate","onDragOver","onDrop","droppedDateUnixtime","differenceStartEnd","setFullYear","getFullYear","setMonth","setDate","fetchService","id","title","getTime","handleDrop","onDragEnter","onDragLeave","onClick","mouseEvent","className","style","onDragStart","handleDragStart","draggable","FiberManualRecord","fontSize","color","timeout","Container","WeekView_styled_templateObject","UpperWrapper","WeekView_styled_templateObject2","LeftEmpty","WeekView_styled_templateObject3","LeftEmptyInner","WeekView_styled_templateObject4","DateAndNumberWrapper","WeekView_styled_templateObject5","DateAndNumberEmpty","WeekView_styled_templateObject6","DateAndNumberEmptyTwo","WeekView_styled_templateObject7","DateAndNumberEmptyShort","WeekView_styled_templateObject8","DateAndNumberEmptyLong","WeekView_styled_templateObject9","DateAndNumberEmptyLongContent","WeekView_styled_templateObject10","DateAndNumberRow","WeekView_styled_templateObject11","DateAndNumberRowPresentation","WeekView_styled_templateObject12","DateAndNumberRowPresentationEmpty","WeekView_styled_templateObject13","DateAndNumberRowPresentationColumn","WeekView_styled_templateObject14","DateAndNumberRowPresentationColumnEmpty","WeekView_styled_templateObject15","DateAndNumberRowPresentationColumnH2","_templateObject16","DateAndNumberRowPresentationColumnDay","_templateObject17","DateAndNumberRowPresentationColumnNumber","_templateObject18","DateAndNumberRowPresentationColumnEmptyEnd","_templateObject19","LowerWrapper","_templateObject20","LowerInnerWrppaer","_templateObject21","TimeWrapper","_templateObject22","TimeInnner","_templateObject23","TimeInnerEmpty","_templateObject24","Time","_templateObject25","TimeString","_templateObject26","_templateObject27","EventInner","_templateObject28","EventHorizontalLineWrapper","_templateObject29","EventHorizontalLine","_templateObject30","EventInnerEmptyLeft","_templateObject31","EventColumnWrapper","_templateObject32","EventColumnBox","_templateObject33","EventColumnPresentation","_templateObject34","EventButton","_templateObject35","EventButtonContent","_templateObject36","EventButtonContentTitle","_templateObject37","EventButtonContentTitleText","_templateObject38","EventButtonContentTime","_templateObject39","EventButtonContentEnd","_templateObject40","WeekView","i","makeDatesForWeek","isDragging","setIsDragging","_useState3","_useState4","_useState5","_useState6","draggingDayIndex","setDraggingDayIndex","_useState7","_useState8","draggingTop","setDraggingTop","Math","floor","nativeEvent","offsetY","handleDragOver","dayIndex","undefined","setTimeout","handleDragEnd","startDate","_","time","WeekView_styled_EventWrapper","eventIndex","onDragEnd","opacity","useEventService","dates","mode","isLoading","setIsLoading","setEvents","readyToFetch","useEffect","Controller_styled_templateObject","TitleWrapper","Controller_styled_templateObject2","Title","Controller_styled_templateObject3","ArrowWrapper","Controller_styled_templateObject4","MonthWeekButton","Link","Controller_styled_templateObject5","withRouter","_ref2","viewType","history","handleArrowClick","arrow","newDate","year","Controller_styled_Container","ArrowBackIos","cursor","ArrowForwardIos","startMonth","endMonth","makeTitle","to","EventPopupWrapper","EventPopup_styled_templateObject","Input","input","EventPopup_styled_templateObject2","DatePickerWrapper","EventPopup_styled_templateObject3","DatePickerStyled","DatePicker","EventPopup_styled_templateObject4","ButtonWrapper","EventPopup_styled_templateObject5","Button","button","EventPopup_styled_templateObject6","Dim","EventPopup_styled_templateObject7","EventPopup","initialStart","initialEnd","popupMode","selectedEvent","closePopup","selectedTime","handleDimClick","useCallback","setTitle","handleTitleChange","value","setHours","getHours","setStartDate","handleStartPickerChange","endDate","setEndDate","handleEndPickerChange","onChange","placeholder","selected","selectsStart","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","placeholderText","selectsEnd","ModalPortal","children","el","document","getElementById","ReactDOM","createPortal","Loading_templateObject","LoadingCircle","Loading_templateObject2","Loading","Portal","Loading_Dim","Calendar_templateObject","Calendar","match","params","initialDate","_match$params","y","Number","M","_useEventService","isPopupOpen","setIsPopupOpen","setPopupMode","setSelectedTime","_useState9","_useState10","setSelectedEvent","Calendar_Container","components_Controller","components_MonthView","components_WeekView","components_EventPopup","util_Loading","App","react_router_dom","react_router","exact","path","component","from","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","render","MuiThemeProvider","src_App"],"mappings":"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","file":"static/js/main.9b5bfa4f.chunk.js","sourcesContent":["import moment from 'moment';\nimport { Event } from '../types/Event';\n\nconst PIXELS_OF_ONE_EVENT_IN_WEEK_VIEW = 48;\nconst PIXELS_BOTTOM_PADDING = 4;\n\n/**\n * Transform Events array to Events Object like\n * {\n *    month: {\n *        date: []\n *    }\n * }\n */\nconst transformEventForCalendar = (events: Event[]) => {\n  const eventsObj: any = {};\n  events\n    .sort((a, b) => a.start - b.start) // 시간 정렬\n    .forEach(event => {\n      const start = moment(event.start);\n      const end = moment(event.end);\n\n      const month = start.month();\n      const date = start.date();\n\n      const eventWithMoreInfo: any = { ...event };\n\n      if (!eventsObj[month]) {\n        eventsObj[month] = {};\n      }\n      if (!eventsObj[month][date]) {\n        eventsObj[month][date] = [];\n      }\n      eventsObj[month][date].push(eventWithMoreInfo);\n\n      eventWithMoreInfo.startTimeString = start.format('a hh시');\n      eventWithMoreInfo.endTimeString = end.format('a hh시');\n\n      // for week view\n      eventWithMoreInfo.top = (start.hour() + start.minute() / 60) * PIXELS_OF_ONE_EVENT_IN_WEEK_VIEW;\n      eventWithMoreInfo.height =\n        (end.hour() + end.minute() / 60 - (start.hour() + start.minute() / 60)) * PIXELS_OF_ONE_EVENT_IN_WEEK_VIEW - PIXELS_BOTTOM_PADDING;\n\n      start.add(1, 'day');\n    });\n\n  return eventsObj;\n};\n\nexport default transformEventForCalendar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  flex: 1 1 auto;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const CalendarWrapper = styled.div`\n  border-left: var(--border) 1px solid;\n  background-color: #fff;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n`;\n\nexport const DaysRow = styled.div`\n  margin: 0;\n  align-items: stretch;\n  display: flex;\n  flex: none;\n  height: 20px;\n`;\n\nexport const Day = styled.div`\n  border-right: var(--border) 1px solid;\n  flex: 1 1 0%;\n  text-align: center;\n  font-family: Roboto, Arial, sans-serif;\n  text-transform: uppercase;\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const DayText = styled.span`\n  color: #70757a;\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 20px;\n`;\n\nexport const Weeks = styled.div`\n  position: relative;\n  overflow: hidden;\n  border-bottom: var(--border) 1px solid;\n  display: flex;\n  flex: 1 1 0%;\n`;\n\nexport const OneWeek = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n`;\n\nexport const DateTitleWrapper = styled.div`\n  font-size: 14px;\n  line-height: 30px;\n  border-right: var(--border) 1px solid;\n  color: #70757a;\n  flex: 1 1 0%;\n  &:last-child {\n    border-right: none;\n  }\n  &.droppable {\n    background-color: rgba(66, 134, 244, 0.5);\n  }\n`;\n\nexport const DateTitle = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const DateTitleText = styled.h2`\n  margin-top: 8px;\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: 0.3px;\n  display: inline-block;\n  text-align: center;\n  white-space: nowrap;\n  width: max-content;\n  min-width: 24px;\n  line-height: 16px;\n  &.this-month {\n    color: var(--main-text);\n  }\n`;\n\nexport const EventsWrapper = styled.div`\n  margin-top: 30px;\n  flex: 1 1 0%;\n`;\n\nexport const EventsInnerWrapper = styled.div`\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  font-size: 24px;\n`;\n\nexport const EventWrapper = styled.div`\n  flex: 1 1 0%;\n  border-right: 1px solid transparent;\n`;\n\nexport const OneEventWrapper = styled.div`\n  position: absolute;\n  height: 24px;\n  width: 14.29%;\n  z-index: 2;\n`;\n\nexport const OneEvent = styled.div`\n  height: 22px;\n  padding: 0 8px;\n  line-height: 20px;\n  font-size: 12px;\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  transition: background-color 100ms linear;\n  &:hover {\n    background-color: var(--secondary-bg-hover);\n  }\n  cursor: pointer;\n`;\n","export const DAYS = ['일', '월', '화', '수', '목', '금', '토'];\n\nexport const TIMES = [\n  '',\n  '오전 1시',\n  '오전 2시',\n  '오전 3시',\n  '오전 4시',\n  '오전 5시',\n  '오전 6시',\n  '오전 7시',\n  '오전 8시',\n  '오전 9시',\n  '오전 10시',\n  '오전 11시',\n  '오후 12시',\n  '오후 1시',\n  '오후 2시',\n  '오후 3시',\n  '오후 4시',\n  '오후 5시',\n  '오후 6시',\n  '오후 7시',\n  '오후 8시',\n  '오후 9시',\n  '오후 10시',\n  '오후 11시',\n];\n\nexport const SECOND = 1000;\nexport const MINUTE = 60 * SECOND;\nexport const HOUR = 60 * MINUTE;\nexport const ONE_HOUR_HEIGHT_PIXELS = 48;\n","import querystring from 'querystring';\n\ninterface Props {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  body?: { id?: number; title?: string; start?: number; end?: number };\n  callback?: Function;\n  finalCb?: Function;\n  qs?: {\n    start: number;\n    end: number;\n  };\n}\n\nexport default {\n  fetch: ({ method, body, callback, finalCb, qs }: Props) => {\n    const queries = qs ? `${querystring.stringify(qs)}` : '';\n    fetch(`${process.env.REACT_APP_SERVER_URL}/events?${queries}`, {\n      method,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body),\n    })\n      .then(response => response.json())\n      .then(body => {\n        if (body.error) {\n          alert(body.error);\n        } else {\n          if (callback) callback(body);\n        }\n        if (finalCb) finalCb();\n      })\n      .catch(error => alert(error.message));\n  },\n};\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { FiberManualRecord } from '@material-ui/icons';\nimport moment, { Moment } from 'moment';\nimport { Event } from '../types/Event';\nimport transformEventForCalendar from '../util/transformEventForCalendar';\nimport {\n  CalendarWrapper,\n  DayText,\n  Day,\n  DaysRow,\n  Wrapper,\n  Weeks,\n  OneWeek,\n  DateTitle,\n  DateTitleWrapper,\n  DateTitleText,\n  EventsWrapper,\n  EventsInnerWrapper,\n  EventWrapper,\n  OneEventWrapper,\n  OneEvent,\n} from './MonthView.styled';\nimport { DAYS } from '../constants';\nimport fetchService from '../services/fetch.service';\n\ninterface Props {\n  date: Moment;\n  events: Event[];\n  handleEventClick: (e: Event) => void;\n  openPopupForNewEvent: (unixtime: number) => void;\n  setReadyToFetch: Dispatch<SetStateAction<boolean>>;\n}\n\n/**\n * 캘린더에 쓸 Week [], dates [] 생성.\n * ex) 4주면 [['1', '2'...], [...], [..], [..]]\n */\nexport const makeDatesForMonth = (date: Moment, eventsObj: any) => {\n  const weeks: {\n    dateTitle: string; // 몇 월 몇 일인지\n    unixtime: number;\n    isThisMonth: boolean; // 이 날이 보고 있는 달인지 지난 달 말인지 다음 달 초인지\n    events: []; // 이 날의 이벤트들\n  }[][] = [];\n\n  const heights: number[] = [];\n\n  const firstDate = moment(date)\n    .startOf('month')\n    .startOf('week');\n  const lastDate = moment(date)\n    .endOf('month')\n    .endOf('week');\n\n  let week = 0;\n  while (firstDate.isSameOrBefore(lastDate)) {\n    const m = firstDate.month();\n    const d = firstDate.date();\n    let isThisMonth = false;\n\n    // 전 달 혹은 다음 달인 경우 week을 계산하지 않음\n    // 현재 8월인데 7월 마지막 주를 계산에 넣게 되면 0 번째 week이어야 하는데\n    // 5번째 week으로 계산함\n    if (m === date.month()) {\n      week =\n        firstDate.week() -\n        moment(firstDate)\n          .startOf('month')\n          .week();\n      if (week === -48) week = 49; // 12월 마지막 주 예외처리\n      isThisMonth = true;\n    }\n\n    // 주 생성\n    if (!weeks[week]) {\n      weeks[week] = [];\n      heights[week] = 0;\n    }\n\n    // 해당 날짜 이벤트 찾아오기\n    const events = (eventsObj[m] && eventsObj[m][d]) || [];\n\n    // 일 오브젝트 생성\n    const oneDate = {\n      dateTitle: firstDate.date() === 1 ? `${m + 1}월 ${firstDate.date()}일` : `${firstDate.date()}`,\n      isThisMonth,\n      events,\n      unixtime: firstDate.unix() * 1000,\n    };\n\n    // 수동으로 element에 height em을 주기 위함\n    if (events.length && heights[week] < events.length) {\n      heights[week] = events.length;\n    }\n\n    // 주에 일 추가\n    weeks[week][firstDate.day()] = oneDate;\n\n    firstDate.add(1, 'day');\n  }\n\n  return { weeks, heights };\n};\n\nconst MonthView: React.FC<Props> = ({ date, events, handleEventClick, openPopupForNewEvent, setReadyToFetch }) => {\n  const eventsObj = transformEventForCalendar(events);\n  const { weeks, heights } = makeDatesForMonth(date, eventsObj);\n  const [draggingEvent, setDraggingEvent] = useState<any>(); // event object\n\n  const handleDateClick = (e: React.SyntheticEvent, unixtime: number) => {\n    if (e.currentTarget === e.target) {\n      openPopupForNewEvent(unixtime);\n    }\n  };\n\n  const handleDragStart = (event: Event) => {\n    setDraggingEvent(event);\n  };\n\n  const handleDragEnter = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.currentTarget.classList.add('droppable');\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('droppable');\n  };\n\n  const handleDrop = (e: React.DragEvent, droppedDateUnixtime: number) => {\n    e.currentTarget.classList.remove('droppable');\n\n    const date = new Date(droppedDateUnixtime);\n    const event = draggingEvent;\n    const differenceStartEnd = event.end - event.start;\n\n    const start = new Date(event.start);\n    start.setFullYear(date.getFullYear());\n    start.setMonth(date.getMonth());\n    start.setDate(date.getDate());\n\n    fetchService.fetch({\n      method: 'PUT',\n      body: {\n        id: event.id,\n        title: event.title,\n        start: start.getTime(),\n        end: start.getTime() + differenceStartEnd,\n      },\n      callback: () => setReadyToFetch(true),\n    });\n  };\n\n  return (\n    <Wrapper>\n      <CalendarWrapper>\n        <DaysRow>\n          {DAYS.map(day => (\n            <Day key={day}>\n              <DayText>{day}</DayText>\n            </Day>\n          ))}\n        </DaysRow>\n        {weeks.map((week, weekIndex) => (\n          <Weeks key={weekIndex}>\n            <OneWeek>\n              {week.map((date, index) => (\n                <DateTitleWrapper\n                  data-testid={`TW-${new Date(date.unixtime).getMonth()}-${new Date(date.unixtime).getDate()}`}\n                  onDragOver={e => e.preventDefault()}\n                  onDrop={e => handleDrop(e, date.unixtime)}\n                  onDragEnter={handleDragEnter}\n                  onDragLeave={handleDragLeave}\n                  onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)}\n                  key={index}>\n                  <DateTitle>\n                    <DateTitleText className={date.isThisMonth ? 'this-month' : ''}>{date.dateTitle}</DateTitleText>\n                  </DateTitle>\n                </DateTitleWrapper>\n              ))}\n            </OneWeek>\n\n            <EventsWrapper>\n              <EventsInnerWrapper style={{ height: `${heights[weekIndex]}em` }}>\n                {week.map((date, index) => (\n                  <EventWrapper onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)} key={index}>\n                    {date.events.map((event: any, index) => (\n                      <OneEventWrapper\n                        data-testid={`${new Date(date.unixtime).getMonth()}-${new Date(date.unixtime).getDate()}-${index}`}\n                        onDragStart={() => handleDragStart(event)}\n                        draggable\n                        key={event.id}\n                        onClick={() => handleEventClick(event)}\n                        style={{ top: `${index}em` }}>\n                        <OneEvent data-testid=\"title\">\n                          <FiberManualRecord fontSize=\"small\" color=\"secondary\" />\n                          {event.startTimeString} {event.title}\n                        </OneEvent>\n                      </OneEventWrapper>\n                    ))}\n                  </EventWrapper>\n                ))}\n              </EventsInnerWrapper>\n            </EventsWrapper>\n          </Weeks>\n        ))}\n      </CalendarWrapper>\n    </Wrapper>\n  );\n};\n\nexport default MonthView;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n  flex: none;\n`;\n\nexport const LeftEmpty = styled.div`\n  white-space: nowrap;\n  display: flex;\n  flex: none;\n  flex-direction: column;\n`;\n\nexport const LeftEmptyInner = styled.div`\n  flex: 1;\n  margin-left: 1px;\n  min-width: 52px;\n`;\n\nexport const DateAndNumberWrapper = styled.div`\n  margin-left: -1px;\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  // overflow: hidden;\n  position: relative;\n`;\n\nexport const DateAndNumberEmpty = styled.div`\n  position: absolute;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  flex: none;\n  pointer-events: none;\n`;\n\nexport const DateAndNumberEmptyTwo = styled.div`\n  display: flex;\n  padding-right: 8px;\n  height: 100%;\n  overflow: hidden;\n  overflow-x: scroll;\n`;\n\nexport const DateAndNumberEmptyShort = styled.div`\n  width: 9px;\n  min-width: 9px;\n`;\n\nexport const DateAndNumberEmptyLong = styled.div`\n  min-width: calc(100% - 18px);\n  flex: none;\n  display: inline-flex;\n  vertical-align: top;\n  padding-right: 8px;\n`;\n\nexport const DateAndNumberEmptyLongContent = styled.div`\n  flex: 1 0 68px;\n  min-width: 68px;\n  padding-right: 13px;\n  position: relative;\n  overflow: visible;\n  display: flex;\n  z-index: 1;\n`;\n\nexport const DateAndNumberRow = styled.div`\n  height: 84px;\n  display: flex;\n  flex: none;\n  overflow: hidden;\n`;\n\nexport const DateAndNumberRowPresentation = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  overflow: hidden;\n  // overflow-x: scroll;\n`;\n\nexport const DateAndNumberRowPresentationEmpty = styled.div`\n  width: 9px;\n  min-width: 9px;\n`;\n\nexport const DateAndNumberRowPresentationColumn = styled.div`\n  width: 81px;\n  min-width: 81px;\n  flex: 1 0 auto;\n  overflow: hidden;\n  box-sizing: border-box;\n  display: flex;\n`;\n\nexport const DateAndNumberRowPresentationColumnEmpty = styled.div`\n  // border-left: #dadce0 1px solid;\n  bottom: 0;\n  height: 20px;\n  margin-left: -1px;\n  position: absolute;\n`;\n\nexport const DateAndNumberRowPresentationColumnH2 = styled.h2`\n  font-weight: 400;\n  margin: 0;\n  text-align: center;\n  width: 100%;\n  font-size: 1.5em;\n`;\n\nexport const DateAndNumberRowPresentationColumnDay = styled.div`\n  line-height: 32px;\n  position: relative;\n  z-index: 2;\n  color: #70757a;\n  font-size: 11px;\n  font-weight: 500;\n  letter-spacing: 0.8px;\n  margin-left: 0;\n  margin-top: 8px;\n  text-indent: 0.8px;\n  text-transform: uppercase;\n`;\n\nexport const DateAndNumberRowPresentationColumnNumber = styled.div`\n  position: relative;\n  outline: none;\n  color: #3c4043;\n  z-index: 2;\n  font-size: 26px;\n  letter-spacing: -2.6px;\n  text-indent: -2.6px;\n  font-variant: tabular-nums;\n  font-feature-settings: 'tnum' 1;\n  border-radius: 100%;\n  line-height: 46px;\n  height: 46px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -8px;\n  width: 46px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const DateAndNumberRowPresentationColumnEmptyEnd = styled.div`\noverflow: scroll\nvisibility: hidden;\nflex: none;\n`;\n\nexport const LowerWrapper = styled.div`\n  flex: 1 1 60%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  // overflow: hidden;\n`;\n\nexport const LowerInnerWrppaer = styled.div`\n  // overflow: hidden;\n  align-items: stretch;\n  display: flex;\n  flex: 1 1 auto;\n`;\n\nexport const TimeWrapper = styled.div`\n  height: auto;\n  // overflow-y: hidden;\n  flex: none;\n  display: flex;\n  align-items: flex-start;\n  min-width: 40px;\n`;\n\nexport const TimeInnner = styled.div`\n  position: relative;\n  background-color: #fff;\n  box-sizing: border-box;\n  margin-left: auto;\n`;\n\nexport const TimeInnerEmpty = styled.div`\n  height: 20px;\n  display: block;\n  visibility: hidden;\n  overflow-y: hidden;\n  max-width: 80px;\n`;\n\nexport const Time = styled.div`\n  position: relative;\n  height: 48px;\n  padding-right: 8px;\n  text-align: right;\n`;\n\nexport const TimeString = styled.span`\n  display: block;\n  position: relative;\n  top: -6px;\n  color: #70757a;\n  font-size: 10px;\n  text-align: right;\n`;\n\nexport const EventWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex: 1 1 auto;\n`;\n\nexport const EventInner = styled.div`\n  min-width: 100%;\n  flex: none;\n  display: inline-flex;\n  vertical-align: top;\n  // overflow: hidden;\n  position: relative;\n`;\n\nexport const EventHorizontalLineWrapper = styled.div`\n  border-top: #dadce0 apx solid;\n`;\n\nexport const EventHorizontalLine = styled.div`\n  height: 48px;\n\n  &::after {\n    content: '';\n    border-bottom: #dadce0 1px solid;\n    position: absolute;\n    width: 100%;\n    margin-top: -1px;\n    z-index: 3;\n    pointer-events: none;\n  }\n`;\n\nexport const EventInnerEmptyLeft = styled.div`\n  width: 8px;\n  border-right: #dadce0 1px solid;\n`;\n\nexport const EventColumnWrapper = styled.div`\n  width: 81px;\n  min-width: 81px;\n  flex: 1 0 auto;\n  border-right: #dadce0 1px solid;\n  position: relative;\n  padding-right: 12px;\n  box-sizing: border-box;\n  outline: none;\n  &:last-child {\n    border-right: white 1px solid;\n    overflow: visible;\n  }\n`;\n\nexport const EventColumnBox = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n`;\n\nexport const EventColumnPresentation = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const EventButton = styled.div`\n  position: absolute;\n  border-radius: 4px;\n  margin-left: -1px;\n  margin-top: 1px;\n  outline: none;\n  cursor: pointer;\n  left: 0%;\n  width: 100%;\n  z-index: 4;\n  background-color: rgb(66, 133, 244);\n  border-color: rgb(66, 133, 244);\n\n  &::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    content: '';\n    box-sizing: border-box;\n    border-radius: 4px;\n    pointer-events: none;\n    opacity: 0;\n    transition: opacity 100ms linear;\n    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  }\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100 %;\n    height: 100%;\n    content: '';\n    box-sizing: border-box;\n    border-radius: 4px;\n    pointer-events: none;\n  }\n`;\n\nexport const EventButtonContent = styled.div`\n  max-height: 100%;\n  overflow: hidden;\n  padding-left: 8px;\n  text-align: left;\n  user-select: none;\n`;\n\nexport const EventButtonContentTitle = styled.div`\n  font-weight: 400;\n  letter-spacing: 0.4px;\n  padding-top: 4px;\n  white-space: normal;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  color: #fff;\n  font-size: 12px;\n  line-height: 15px;\n  overflow: hidden;\n  text-align: left;\n`;\n\nexport const EventButtonContentTitleText = styled.span`\n  font-weight: 400;\n  letter-spacing: 0.4px;\n  white-space: normal;\n  overflow-wrap: break-word;\n`;\n\nexport const EventButtonContentTime = styled.div`\n  max-width: 100%;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  letter-spacing: 0.1px;\n  line-height: 15px;\n  overflow: hidden;\n`;\n\nexport const EventButtonContentEnd = styled.div`\n  bottom: 0;\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 50%;\n  max-height: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 5004;\n  user-select: none;\n`;\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport moment, { Moment } from 'moment';\nimport { Event } from '../types/Event';\nimport {\n  Container,\n  UpperWrapper,\n  LeftEmpty,\n  LeftEmptyInner,\n  DateAndNumberWrapper,\n  DateAndNumberEmpty,\n  DateAndNumberEmptyTwo,\n  DateAndNumberEmptyShort,\n  DateAndNumberEmptyLong,\n  DateAndNumberRow,\n  DateAndNumberEmptyLongContent,\n  DateAndNumberRowPresentationEmpty,\n  DateAndNumberRowPresentation,\n  DateAndNumberRowPresentationColumn,\n  DateAndNumberRowPresentationColumnEmpty,\n  DateAndNumberRowPresentationColumnH2,\n  DateAndNumberRowPresentationColumnNumber,\n  DateAndNumberRowPresentationColumnEmptyEnd,\n  DateAndNumberRowPresentationColumnDay,\n  LowerWrapper,\n  LowerInnerWrppaer,\n  TimeWrapper,\n  TimeInnner,\n  Time,\n  TimeString,\n  TimeInnerEmpty,\n  EventWrapper,\n  EventInner,\n  EventHorizontalLineWrapper,\n  EventHorizontalLine,\n  EventInnerEmptyLeft,\n  EventColumnWrapper,\n  EventColumnBox,\n  EventColumnPresentation,\n  EventButton,\n  EventButtonContent,\n  EventButtonContentTitle,\n  EventButtonContentTitleText,\n  EventButtonContentTime,\n  EventButtonContentEnd,\n} from './WeekView.styled';\nimport transformEventForCalendar from '../util/transformEventForCalendar';\nimport { HOUR, DAYS, TIMES, ONE_HOUR_HEIGHT_PIXELS } from '../constants';\nimport fetchService from '../services/fetch.service';\n\ninterface Props {\n  date: Moment;\n  events: Event[];\n  handleEventClick: (e: Event) => void;\n  openPopupForNewEvent: (unixtime: number) => void;\n  setReadyToFetch: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const makeDatesForWeek = (date: Moment, eventsObj: any) => {\n  // 일자 구하기\n  const week: {\n    date: string;\n    events: any[];\n    unixtime: number;\n  }[] = [];\n\n  // 주 시작 날짜\n  const firstDate = moment(date).startOf('week');\n\n  // 각 요일에 날짜, 이벤트 담기\n  for (let i = 0; i < 7; i++) {\n    const m = firstDate.month();\n    const d = firstDate.date();\n\n    // 해당 날짜 이벤트 찾아오기\n    const events = (eventsObj[m] && eventsObj[m][d]) || [];\n\n    week.push({\n      date: `${firstDate.date()}`,\n      events,\n      unixtime: firstDate.unix() * 1000,\n    });\n\n    firstDate.add(1, 'day');\n  }\n\n  return week;\n};\n\nlet timeout: number | undefined;\n\nconst WeekView: React.FC<Props> = ({ date, events, handleEventClick, openPopupForNewEvent, setReadyToFetch }) => {\n  const eventsObj = transformEventForCalendar(events);\n  const week = makeDatesForWeek(date, eventsObj);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggingEvent, setDraggingEvent] = useState<any>(); // event object\n  const [draggingDayIndex, setDraggingDayIndex] = useState(-1);\n  const [draggingTop, setDraggingTop] = useState(0);\n\n  const handleDateClick = (e: React.MouseEvent, unixtime: number) => {\n    if (e.currentTarget === e.target) {\n      openPopupForNewEvent(unixtime + HOUR * Math.floor(e.nativeEvent.offsetY / ONE_HOUR_HEIGHT_PIXELS));\n    }\n  };\n\n  const handleDragStart = (event: Event) => {\n    setDraggingEvent(event);\n    setIsDragging(true);\n  };\n\n  const handleDragOver = (e: React.DragEvent, dayIndex: number) => {\n    e.preventDefault();\n    if (timeout === undefined && e.target === e.currentTarget) {\n      setDraggingDayIndex(dayIndex);\n      setDraggingTop(Math.floor(e.nativeEvent.offsetY / ONE_HOUR_HEIGHT_PIXELS) * ONE_HOUR_HEIGHT_PIXELS);\n\n      timeout = setTimeout(() => (timeout = undefined), 100);\n    }\n  };\n\n  const handleDragEnd = () => {\n    setIsDragging(false);\n\n    if (draggingDayIndex === -1) {\n      return;\n    }\n\n    const event = draggingEvent;\n    const differenceStartEnd = event.end - event.start;\n\n    const startDate = moment(event.start);\n    startDate.day(draggingDayIndex);\n    startDate.hour(draggingTop / ONE_HOUR_HEIGHT_PIXELS);\n\n    setDraggingDayIndex(-1);\n    setDraggingEvent(undefined);\n    setDraggingTop(0);\n\n    fetchService.fetch({\n      method: 'PUT',\n      body: {\n        id: event.id,\n        title: event.title,\n        start: startDate.unix() * 1000,\n        end: startDate.unix() * 1000 + differenceStartEnd,\n      },\n      callback: () => setReadyToFetch(true),\n    });\n  };\n\n  return (\n    <Container>\n      <UpperWrapper>\n        <LeftEmpty>\n          <LeftEmptyInner></LeftEmptyInner>\n        </LeftEmpty>\n        <DateAndNumberWrapper>\n          <DateAndNumberEmpty>\n            <DateAndNumberEmptyTwo>\n              <DateAndNumberEmptyShort />\n              <DateAndNumberEmptyLong>\n                {DAYS.map((_, index) => (\n                  <DateAndNumberEmptyLongContent key={index} />\n                ))}\n              </DateAndNumberEmptyLong>\n            </DateAndNumberEmptyTwo>\n          </DateAndNumberEmpty>\n          <DateAndNumberRow>\n            <DateAndNumberRowPresentation>\n              <DateAndNumberRowPresentationEmpty />\n              {DAYS.map((day, index) => (\n                <DateAndNumberRowPresentationColumn key={index}>\n                  <DateAndNumberRowPresentationColumnEmpty />\n                  <DateAndNumberRowPresentationColumnH2>\n                    <DateAndNumberRowPresentationColumnDay>{day}</DateAndNumberRowPresentationColumnDay>\n                    <DateAndNumberRowPresentationColumnNumber>{week[index].date}</DateAndNumberRowPresentationColumnNumber>\n                  </DateAndNumberRowPresentationColumnH2>\n                </DateAndNumberRowPresentationColumn>\n              ))}\n              <DateAndNumberRowPresentationColumnEmptyEnd />\n            </DateAndNumberRowPresentation>\n          </DateAndNumberRow>\n        </DateAndNumberWrapper>\n      </UpperWrapper>\n\n      <LowerWrapper>\n        <LowerInnerWrppaer>\n          <TimeWrapper>\n            <TimeInnner>\n              {TIMES.map(time => (\n                <Time key={time}>\n                  <TimeString>{time}</TimeString>\n                </Time>\n              ))}\n              <TimeInnerEmpty />\n            </TimeInnner>\n          </TimeWrapper>\n\n          <EventWrapper>\n            <EventInner>\n              <EventHorizontalLineWrapper>\n                {TIMES.map((time, index) => (\n                  <EventHorizontalLine key={index} />\n                ))}\n              </EventHorizontalLineWrapper>\n              <EventInnerEmptyLeft />\n\n              {week.map((date, dayIndex) => (\n                <EventColumnWrapper key={dayIndex}>\n                  <EventColumnBox\n                    data-testid={`Date-${date.date}`}\n                    onDragOver={e => handleDragOver(e, dayIndex)}\n                    onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)}\n                  />\n                  <EventColumnPresentation\n                    onDragOver={e => handleDragOver(e, dayIndex)}\n                    onClick={mouseEvent => handleDateClick(mouseEvent, date.unixtime)}>\n                    {date.events.map((event, eventIndex) => (\n                      <EventButton\n                        data-testid={`${date.date}-${eventIndex}`}\n                        onDragStart={() => handleDragStart(event)}\n                        onDragEnd={handleDragEnd}\n                        draggable\n                        key={event.id}\n                        style={{\n                          top: `${event.top}px`,\n                          height: `${event.height}px`,\n                        }}\n                        onClick={() => handleEventClick(event)}>\n                        <EventButtonContent>\n                          <EventButtonContentTitle>\n                            <EventButtonContentTitleText data-testid=\"title\">{event.title}</EventButtonContentTitleText>\n                            <EventButtonContentTime data-testid=\"time\">\n                              {`${event.startTimeString}~${event.endTimeString}`}\n                            </EventButtonContentTime>\n                            <EventButtonContentEnd />\n                          </EventButtonContentTitle>\n                        </EventButtonContent>\n                      </EventButton>\n                    ))}\n\n                    {isDragging && dayIndex === draggingDayIndex && (\n                      <EventButton\n                        style={{\n                          top: `${draggingTop}px`,\n                          height: `${draggingEvent.height}px`,\n                          opacity: 0.7,\n                        }}>\n                        <EventButtonContent>\n                          <EventButtonContentTitle>\n                            <EventButtonContentTitleText>{draggingEvent.title}</EventButtonContentTitleText>\n                            <EventButtonContentTime>{`${draggingEvent.startTimeString}~${draggingEvent.endTimeString}`}</EventButtonContentTime>\n                            <EventButtonContentEnd />\n                          </EventButtonContentTitle>\n                        </EventButtonContent>\n                      </EventButton>\n                    )}\n                  </EventColumnPresentation>\n                </EventColumnWrapper>\n              ))}\n            </EventInner>\n          </EventWrapper>\n        </LowerInnerWrppaer>\n      </LowerWrapper>\n    </Container>\n  );\n};\n\nexport default WeekView;\n","import { useEffect, useState } from 'react';\nimport fetchService from '../services/fetch.service';\nimport { Event } from '../types/Event';\nimport moment, { Moment } from 'moment';\n\nconst useEventService = (dates: Moment, mode: 'month' | 'week') => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [events, setEvents] = useState<Event[]>([]);\n  const [readyToFetch, setReadyToFetch] = useState(true);\n\n  const firstDate = moment(dates).startOf(mode);\n  const lastDate = moment(dates).endOf(mode);\n  if (mode === 'month') {\n    // ex) when we fetch August, fetch July's late days and September's early days\n    firstDate.startOf('week');\n    lastDate.endOf('week');\n  }\n\n  const start = firstDate.unix() * 1000;\n  const end = lastDate.unix() * 1000;\n\n  useEffect(() => setReadyToFetch(true), [start, end]);\n\n  useEffect(() => {\n    if (readyToFetch) {\n      setIsLoading(true);\n      fetchService.fetch({\n        method: 'GET',\n        callback: setEvents,\n        finalCb: () => setIsLoading(false),\n        qs: {\n          start,\n          end,\n        },\n      });\n      setReadyToFetch(false);\n    }\n  }, [readyToFetch, start, end]);\n\n  return {\n    isLoading,\n    events,\n    setReadyToFetch,\n  };\n};\n\nexport default useEventService;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 50px;\n  justify-content: space-around;\n  align-items: center;\n  border-bottom: var(--border) 1px solid;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  min-width: 200px;\n`;\n\nexport const Title = styled.div`\n  font-size: 1.5em;\n  color: var(--main-text);\n`;\n\nexport const ArrowWrapper = styled.div`\n  margin-right: 20px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const MonthWeekButton = styled(Link)`\n  color: var(--main-text);\n  border: #000 1px solid;\n  text-decoration: none;\n  padding: 5px;\n  &:first-child {\n    border-right: none;\n  }\n  &.selected {\n    background-color: var(--primary-bg);\n    color: var(--primary-text);\n  }\n`;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nimport { Moment } from 'moment';\nimport { History } from 'history';\nimport moment from 'moment';\nimport { Container, TitleWrapper, ArrowWrapper, Title, MonthWeekButton } from './Controller.styled';\n\ninterface ControllerProps {\n  viewType: 'month' | 'week';\n  date: Moment;\n  setDate: Dispatch<SetStateAction<Moment>>;\n  history: History;\n}\n\nexport const makeTitle = ({ viewType, date }: { viewType: 'month' | 'week'; date: Moment }) => {\n  let title = `${date.year()}년 ${date.month() + 1}월`;\n  if (viewType === 'week') {\n    const startMonth = moment(date)\n      .startOf('week')\n      .month();\n    const endMonth = moment(date)\n      .endOf('week')\n      .month();\n    if (startMonth !== endMonth) {\n      title = `${date.year()}년 ${startMonth + 1}월 - ${endMonth + 1}월`;\n    }\n  }\n  return title;\n};\n\nconst Controller: React.FC<RouteComponentProps & ControllerProps> = ({ viewType, date, setDate, history }) => {\n  const handleArrowClick = (arrow: 'add' | 'subtract') => () => {\n    const newDate = moment(date);\n    // add or subtract 1 month, week\n    newDate[arrow](1, viewType === 'month' ? 'M' : 'w');\n\n    // month 이동 후 그 달의 첫 날로\n    if (viewType === 'month') {\n      newDate.startOf('month');\n    }\n    setDate(newDate);\n    history.push(`/${viewType}/${newDate.year()}/${newDate.month() + 1}/${newDate.date()}`);\n  };\n\n  return (\n    <Container>\n      <TitleWrapper>\n        <ArrowWrapper>\n          <ArrowBackIos data-testid=\"left-arrow\" style={{ cursor: 'pointer' }} onClick={handleArrowClick('subtract')} />\n          <ArrowForwardIos data-testid=\"right-arrow\" style={{ cursor: 'pointer' }} onClick={handleArrowClick('add')} />\n        </ArrowWrapper>\n        <Title>{makeTitle({ viewType, date })}</Title>\n      </TitleWrapper>\n\n      <div>\n        <MonthWeekButton\n          className={viewType === 'month' ? 'selected' : ''}\n          data-testid=\"month-view\"\n          to={`/month/${date.year()}/${date.month() + 1}/${date.date()}`}>\n          Month\n        </MonthWeekButton>\n        <MonthWeekButton\n          className={viewType === 'week' ? 'selected' : ''}\n          data-testid=\"week-view\"\n          to={`/week/${date.year()}/${date.month() + 1}/${date.date()}`}>\n          Week\n        </MonthWeekButton>\n      </div>\n    </Container>\n  );\n};\n\nexport default withRouter(Controller);\n","import styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const EventPopupWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  padding: 2rem 1rem;\n  // width: 70%;\n  align-items: center;\n  border-radius: 10px;\n  animation: showup 0.5s;\n  border: #000 1px solid;\n\n  @keyframes showup {\n    from {\n      opacity: 0;\n      visibility: hidden;\n    }\n    to {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 5px;\n`;\n\nexport const DatePickerWrapper = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const DatePickerStyled = styled(DatePicker)`\n  border: none;\n  border-bottom: #000 1px solid;\n  padding: 5px;\n  margin: 0 5px;\n  text-align: center;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  color: var(--main-text);\n  background-color: #fff;\n  border: #000 1px solid;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nexport const Dim = styled.div`\n  background: rgba(0, 0, 0, 0.3);\n  position: fixed;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n","import React, { useState, Dispatch, SetStateAction, useCallback } from 'react';\nimport { Event } from '../types/Event';\nimport fetchService from '../services/fetch.service';\nimport { Dim, EventPopupWrapper, Input, DatePickerWrapper, DatePickerStyled, ButtonWrapper, Button } from './EventPopup.styled';\n\ninterface EventPopupProps {\n  viewType: string;\n  popupMode: string;\n  selectedEvent?: Event;\n  closePopup: () => void;\n  setReadyToFetch: Dispatch<SetStateAction<boolean>>;\n  selectedTime: Date;\n}\n\nconst EventPopup: React.FC<EventPopupProps> = ({ viewType, popupMode, selectedEvent, closePopup, setReadyToFetch, selectedTime }) => {\n  const handleDimClick = useCallback((e: React.SyntheticEvent) => e.currentTarget === e.target && closePopup(), [closePopup]);\n\n  const [title, setTitle] = useState(selectedEvent ? selectedEvent.title : '');\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value), [setTitle]);\n\n  let initialStart, initialEnd;\n  if (popupMode === 'update' && selectedEvent) {\n    initialStart = new Date(selectedEvent.start);\n    initialEnd = new Date(selectedEvent.end);\n  } else {\n    // 월/주 보기에서, 월은 현재 시간, 주는 선택한 시간으로 팝업 시간 설정\n    initialStart = selectedTime;\n    if (viewType === 'month') initialStart.setHours(new Date().getHours() + 1);\n    initialEnd = new Date(initialStart);\n    initialEnd.setHours(initialStart.getHours() + 1);\n  }\n\n  const [startDate, setStartDate] = useState(initialStart);\n  const handleStartPickerChange = useCallback((date: Date) => setStartDate(date), [setStartDate]);\n\n  const [endDate, setEndDate] = useState(initialEnd);\n  const handleEndPickerChange = useCallback((date: Date) => setEndDate(date), [setEndDate]);\n\n  // 삭제, 저장 핸들러\n  const callback = useCallback(() => {\n    setReadyToFetch(true);\n    closePopup();\n  }, [closePopup, setReadyToFetch]);\n\n  const handleRemove = () => {\n    if (selectedEvent) {\n      fetchService.fetch({\n        method: 'DELETE',\n        body: { id: selectedEvent.id },\n        callback,\n      });\n    }\n  };\n\n  const handleSave = () => {\n    fetchService.fetch({\n      method: popupMode === 'update' ? 'PUT' : 'POST',\n      body: {\n        id: selectedEvent && selectedEvent.id,\n        title: title || '(제목 없음)',\n        start: startDate.getTime(),\n        end: endDate.getTime(),\n      },\n      callback,\n    });\n  };\n\n  return (\n    <Dim data-testid=\"dim\" onClick={handleDimClick}>\n      <EventPopupWrapper>\n        <Input data-testid=\"title\" value={title} onChange={handleTitleChange} placeholder=\"일정의 제목을 입력해주세요\" />\n        <DatePickerWrapper data-testid=\"pickers\">\n          <DatePickerStyled\n            selected={startDate}\n            onChange={handleStartPickerChange}\n            selectsStart\n            startDate={startDate}\n            endDate={endDate}\n            showTimeSelect\n            timeFormat=\"h:mm aa\"\n            timeIntervals={60}\n            dateFormat=\"yyyy-MM-dd h:mm aa\"\n            timeCaption=\"시간\"\n            placeholderText=\"시작 날짜와 시간을 선택하세요\"\n          />{' '}\n          ~{' '}\n          <DatePickerStyled\n            selected={endDate}\n            onChange={handleEndPickerChange}\n            selectsEnd\n            startDate={startDate}\n            endDate={endDate}\n            showTimeSelect\n            timeFormat=\"h:mm aa\"\n            timeIntervals={60}\n            dateFormat=\"yyyy-MM-dd h:mm aa\"\n            timeCaption=\"시간\"\n            placeholderText=\"끝나는 날짜와 시간을 선택하세요\"\n          />\n        </DatePickerWrapper>\n\n        <ButtonWrapper>\n          <Button data-testid=\"cancel\" onClick={closePopup}>\n            취소\n          </Button>\n          {popupMode === 'update' && (\n            <Button data-testid=\"remove\" onClick={handleRemove}>\n              삭제\n            </Button>\n          )}\n          <Button data-testid=\"save\" onClick={handleSave}>\n            저장\n          </Button>\n        </ButtonWrapper>\n      </EventPopupWrapper>\n    </Dim>\n  );\n};\n\nexport default EventPopup;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst ModalPortal: React.FC = ({ children }) => {\n  const el = document.getElementById('modal');\n  return el ? ReactDOM.createPortal(children, el) : null;\n};\n\nexport default ModalPortal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Portal from './Portal';\n\nconst Dim = styled.div`\nposition: fixed;\nleft: 0;\ntop: 0;\nheight: 100%;\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nz-index: 1;\n`;\n\nconst LoadingCircle = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 64px;\n  height: 64px;\n  & div {\n    position: absolute;\n    width: 5px;\n    height: 5px;\n    background: grey;\n    border-radius: 50%;\n    animation: lds-default 1.2s linear infinite;\n  }\n  & div:nth-child(1) {\n    animation-delay: 0s;\n    top: 29px;\n    left: 53px;\n  }\n  & div:nth-child(2) {\n    animation-delay: -0.1s;\n    top: 18px;\n    left: 50px;\n  }\n  & div:nth-child(3) {\n    animation-delay: -0.2s;\n    top: 9px;\n    left: 41px;\n  }\n  & div:nth-child(4) {\n    animation-delay: -0.3s;\n    top: 6px;\n    left: 29px;\n  }\n  & div:nth-child(5) {\n    animation-delay: -0.4s;\n    top: 9px;\n    left: 18px;\n  }\n  & div:nth-child(6) {\n    animation-delay: -0.5s;\n    top: 18px;\n    left: 9px;\n  }\n  & div:nth-child(7) {\n    animation-delay: -0.6s;\n    top: 29px;\n    left: 6px;\n  }\n  & div:nth-child(8) {\n    animation-delay: -0.7s;\n    top: 41px;\n    left: 9px;\n  }\n  & div:nth-child(9) {\n    animation-delay: -0.8s;\n    top: 50px;\n    left: 18px;\n  }\n  & div:nth-child(10) {\n    animation-delay: -0.9s;\n    top: 53px;\n    left: 29px;\n  }\n  & div:nth-child(11) {\n    animation-delay: -1s;\n    top: 50px;\n    left: 41px;\n  }\n  & div:nth-child(12) {\n    animation-delay: -1.1s;\n    top: 41px;\n    left: 50px;\n  }\n\n  @keyframes lds-default {\n    0%,\n    20%,\n    80%,\n    100% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.5);\n    }\n  }\n`;\n\nconst Loading: React.FC = () => {\n  return (\n    <Portal>\n      <Dim>\n        <LoadingCircle>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </LoadingCircle>\n      </Dim>\n    </Portal>\n  );\n};\n\nexport default Loading;\n","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { RouteComponentProps } from 'react-router-dom';\nimport moment, { Moment } from 'moment';\nimport { Event } from '../types/Event';\nimport MonthView from './MonthView';\nimport WeekView from './WeekView';\nimport useEventService from '../hooks/useEventService';\nimport Controller from './Controller';\nimport EventPopup from './EventPopup';\nimport Portal from '../util/Portal';\nimport Loading from '../util/Loading';\n\ninterface CalendarProps {\n  viewType: 'month' | 'week';\n  year?: string;\n  month?: string;\n  date?: string;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  user-select: none;\n`;\n\nconst Calendar: React.FC<RouteComponentProps<CalendarProps>> = ({ match }) => {\n  const viewType = match.params.viewType || 'month';\n\n  // a date which user is looking\n  const initialDate: any = {};\n  if (match.params.date) {\n    // only for initilization of dates when it's the first open of this app\n    const { year, month, date } = match.params;\n    initialDate.y = Number(year);\n    initialDate.M = Number(month) - 1;\n    initialDate.d = Number(date);\n  }\n  const [date, setDate] = useState<Moment>(moment(initialDate));\n\n  // events\n  const { events, setReadyToFetch, isLoading } = useEventService(date, viewType);\n\n  // popups\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupMode, setPopupMode] = useState<'new' | 'update'>('new');\n  const [selectedTime, setSelectedTime] = useState<Date>(new Date());\n  const [selectedEvent, setSelectedEvent] = useState<Event>();\n  const closePopup = useCallback(() => {\n    setSelectedEvent(undefined);\n    setIsPopupOpen(false);\n  }, []);\n\n  const handleEventClick = (event: Event) => {\n    setSelectedEvent(event);\n    setPopupMode('update');\n    setIsPopupOpen(true);\n  };\n\n  const openPopupForNewEvent = (unixtime: number) => {\n    setSelectedTime(new Date(unixtime));\n    setPopupMode('new');\n    setIsPopupOpen(true);\n  };\n\n  return (\n    <Container>\n      <Controller viewType={viewType} setDate={setDate} date={date} />\n\n      {viewType === 'month' ? (\n        <MonthView\n          date={date}\n          events={events}\n          handleEventClick={handleEventClick}\n          openPopupForNewEvent={openPopupForNewEvent}\n          setReadyToFetch={setReadyToFetch}\n        />\n      ) : (\n          <WeekView\n            date={date}\n            events={events}\n            handleEventClick={handleEventClick}\n            openPopupForNewEvent={openPopupForNewEvent}\n            setReadyToFetch={setReadyToFetch}\n          />\n        )}\n\n      {isPopupOpen && (\n        <Portal>\n          <EventPopup\n            viewType={viewType}\n            selectedEvent={selectedEvent}\n            popupMode={popupMode}\n            closePopup={closePopup}\n            setReadyToFetch={setReadyToFetch}\n            selectedTime={selectedTime}\n          />\n        </Portal>\n      )}\n      {isLoading && <Loading />}\n    </Container>\n  );\n};\n\nexport default Calendar;\n","import React from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport 'moment/locale/ko';\nimport Calendar from './components/Calendar';\n\nconst App: React.FC = () => (\n  // <BrowserRouter basename=\"/calendar-client\">\n    <HashRouter>\n      <Switch>\n        <Route\n          exact\n          path={['/', '/:viewType(month|week)', '/:viewType(month|week)/:year/:month/:date']}\n          component={Calendar}\n        />\n        <Redirect from=\"*\" to=\"/\" />;\n    </Switch>\n    </HashRouter>\n  // </BrowserRouter>\n);\n\nexport default App;\n","import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#4285f4',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}